Dokument = (!KOPF2 Line)* Eintrag EOF ;

//==============================================================================
// Wiktionary Eintrag
//==============================================================================
Eintrag = DeEintrag? OtherLangEintrag* EOF ;
OtherLangEintrag = (!DeSpracheKopf Line)+ ;
DeEintrag = DeSpracheKopf DeWortart+ ;

DeSpracheKopf = KOPF2 Lemma "(" DeSpracheTemplate ")" Space KOPF2 RestOfLine ;
DeSpracheTemplate = LT "Sprache" IT "Deutsch" RT ;
Lemma = Letter+ Space {};

DeWortart = ( WortartKopf WortartBody / UnknownWortartKopf Line* ) ;
WortartKopf = SubstantivKopf ;
WortartBody = MiddleSection TranslationsSection? ~{};
UnknownWortartKopf = KOPF3 WortartTemplate _*+ KOPF3 RestOfLine ;
WortartTemplate = LT "Wortart" IT TemplateAttr IT "Deutsch" RT ;

//==============================================================================
// Substantiv
//==============================================================================
SubstantivKopf = KOPF3 SubstantivTemplate "," Space Gender _*+ KOPF3 RestOfLine {createSubstantiv};
SubstantivTemplate = LT "Wortart" IT "Substantiv" IT "Deutsch" RT ;

//------------------------------------------------------------------------------
// Flexion table
//------------------------------------------------------------------------------
FlexionTable = FlexionTableKopf FlexionForm+ RT RestOfLine ;
FlexionTableKopf = LT "Deutsch Substantiv Übersicht" Space RestOfLine ;
FlexionForm = "|" (NomSg / NomPl / GenSg / GenPl / DatSg / DatPl / AkkSg / AkkPl / BadLine ) ;
NomSg = "Nominativ Singular" Space OptDigit Space "=" FlexionVariantList RestOfLine {addNomSg};
NomPl = "Nominativ Plural" Space OptDigit Space "=" FlexionVariantList RestOfLine {addNomPl};
GenSg = "Genitiv Singular" Space OptDigit Space "=" FlexionVariantList RestOfLine {addGenSg};
GenPl = "Genitiv Plural" Space OptDigit Space "=" FlexionVariantList RestOfLine {addGenPl};
DatSg = "Dativ Singular" Space OptDigit Space "=" FlexionVariantList RestOfLine {addDatSg};
DatPl = "Dativ Plural" Space OptDigit Space "=" FlexionVariantList RestOfLine {addDatPl};
AkkSg = "Akkusativ Singular" Space OptDigit Space "=" FlexionVariantList RestOfLine {addAkkSg};
AkkPl = "Akkusativ Plural" Space OptDigit Space "=" FlexionVariantList RestOfLine {addAkkPl};

FlexionVariantList  = Space Phrase (BR Phrase)* {}
                    / Space "—" Space {}
                    / (!EOL _)* ;

//==============================================================================
// Common Wiktionary markup
//==============================================================================
Gender = LT Letter+ RT Space {};

MiddleSection = (!TranslationsKopf (FlexionTable / Line))* ;

//------------------------------------------------------------------------------
// Meanings
//------------------------------------------------------------------------------


//------------------------------------------------------------------------------
// Translations
//------------------------------------------------------------------------------
TranslationsSection = TranslationsKopf (!TranslationsTable Line)* TranslationsTable (!KopfStart Line)* ;
TranslationsKopf = KOPF4 "Übersetzungen" Space KOPF4 RestOfLine ;
TranslationsTable = LT "Ü-Tabelle" Line (LangTranslations / DialectTable / !RT Line)*+ RT RestOfLine ;
LangTranslations = LangLvl Lang ":" Space TranslationMeaning (";" Space TranslationMeaning)* RestOfLine {addTranslationsForLanguage};
LangLvl = "*"+ ;
Lang = LT Word RT {};
TranslationMeaning = TranslationMeaningNo Translation (","? Space Translation)* {};
TranslationMeaningNo = "[" _++ "]" Space {};
Translation = LT (UeTemplate / UetTemplate) RT Space Gender? {};
UeTemplate = ("Ü" / "Ü?") IT TemplateAttr IT TemplateAttr (IT TemplateAttr)? (IT TemplateAttr)? {};
UetTemplate = ("Üt" / "Üt?") IT TemplateAttr IT TemplateAttr IT TemplateAttr (IT TemplateAttr)? (IT TemplateAttr)? {};
DialectTable = "|Dialekttabelle=" RestOfLine (!RT Line)* ; // ignore it for now

//------------------------------------------------------------------------------
// General Wiki Markup
//------------------------------------------------------------------------------
KOPF2 = "==" Space ;
KOPF3 = "===" Space ;
KOPF4 = "====" Space ;
KopfStart = "="+ " " ;
LT = "{{" Space ; // Left template opening
IT = "|" ; // Inside template separator
RT = "}}" Space ; // Right template closing
TemplateAttr = (!(IT / RT) _)+ ;

//------------------------------------------------------------------------------
// HTML markup
//------------------------------------------------------------------------------
BR = "<br" Space "/>" ;
Comment = CommentStart _++ CommentEnd Space ;
CommentStart = "<!--" ;
CommentEnd = "-->" ;

//------------------------------------------------------------------------------
// Common expressions
//------------------------------------------------------------------------------
Line = _++ EOL ;
BadLine = _++ EOL ;
EmptyLine =  [\n\r]* ;
RestOfLine = _*+ EOL ;

Digit = [0-9] ;
OptDigit = Digit? ;
Number = Digit+ ;

Letter = [a-z] / [A-Z] / [äÄüÜöÖß] ;
Word = Letter (Letter / [-'])* ;
Phrase = Word (Space Word)* ;

Space = " "* ;
EOF = !_ ;
EOL = [\r\n]+ / EOF ;